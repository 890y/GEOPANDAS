# -*- coding: utf-8 -*-
"""GEOPANDAS CODE 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gp7V0WnuImhqqJ4BUm_WmGpFCiCtAaRG
"""

#!pip install geodatasets

import geopandas as gpd
import matplotlib.pyplot as plt

# Load the Natural Earth countries dataset from an online source
url = 'https://raw.githubusercontent.com/python-visualization/folium/master/examples/data/world-countries.json'
world = gpd.read_file(url)

# List of European countries
european_countries = [
    'Albania', 'Andorra', 'Armenia', 'Austria', 'Azerbaijan', 'Belarus',
    'Belgium', 'Bosnia and Herzegovina', 'Bulgaria', 'Croatia', 'Cyprus',
    'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Georgia',
    'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy',
    'Kazakhstan', 'Latvia', 'Liechtenstein', 'Lithuania', 'Luxembourg',
    'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'North Macedonia',
    'Norway', 'Poland', 'Portugal', 'Romania', 'Russia', 'San Marino',
    'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland',
    'Turkey', 'Ukraine', 'United Kingdom', 'Vatican City'
]

# Create a new column for coloring
world['is_europe'] = world['name'].isin(european_countries)

# Step 1: Plot the world map
fig, ax = plt.subplots(figsize=(15, 10))
world.boundary.plot(ax=ax, linewidth=1)  # Draw country boundaries

# Highlight European countries in green and the rest in light gray
world[world['is_europe']].plot(ax=ax, color='green', edgecolor='black', label='Europe')
world[~world['is_europe']].plot(ax=ax, color='lightgray', edgecolor='black', label='Other Countries')

# Add title and legend
plt.title('World Map with European Countries Highlighted in Green')
plt.axis('off')  # Turn off the axis
plt.legend()
plt.show()